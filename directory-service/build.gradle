plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'jacoco'
}

group = 'com.nikki.directory'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'junit:junit:4.13.1'


	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	//testImplementation group: 'de.flapdoodle.embed', name: 'de.flapdoodle.embed.mongo', version: '4.7.0'
	testImplementation group: 'io.projectreactor', name: 'reactor-test', version: '3.5.6'
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params'
	testImplementation group: 'org.mockito', name: 'mockito-inline' , version: '5.2.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'



	testImplementation('com.jayway.restassured:rest-assured:2.9.0')

}

test {
	finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: 'com/nikki/directory/model/**')
			fileTree(dir: it, exclude: 'com/nikki/directory/config/**')
			fileTree(dir: it, exclude: 'com/nikki/directory/exception/**')

		}))
	}
}

jacoco {
	toolVersion = "0.8.+"
}

test {
	useJUnitPlatform()
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 1
			}
		}
	}
}

